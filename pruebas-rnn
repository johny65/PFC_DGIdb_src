model = Sequential()
model.add(Embedding(max_words, EMB_SIZE, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(Dropout(0.1))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.1)) #, input_shape=formato_entrada))
model.add(Dense(num_classes))
model.add(Activation('sigmoid'))
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['categorical_accuracy'])

UNIDADES_LSTM = 100

MODELO_RNN = "rnn-16clases-500x4"
~40

MODELO_RNN = "rnn-16clases-500x3"
Acc: 37.20538720538721


MODELO_RNN = "rnn-16clases-500x5"
Acc: 37.20538720538721


MODELO_RNN = "rnn-16clases-1000x4-100u"
Acc: 33.33333333333333
------------------------------------

UNIDADES_LSTM = 200

MODELO_RNN = "rnn-16clases-500x4-200u"
Acc: 35.35353535353536


MODELO_RNN = "rnn-16clases-1000x4-200u"
Acc: 38.88888888888889





------------------------------
top palabras 1000


MODELO_RNN = "rnn-16clases-500x4-100u_v2"
Acc: 49.158249158249156
PROBAR MÁS ÉPOCAS

MODELO_RNN = "rnn-16clases-750x4-100u"
Acc: 47.474747474747474

MODELO_RNN = "rnn-16clases-500x4-50u"
Acc: 34.84848484848485


MODELO_RNN = "rnn-16clases-500x4-100u-50emb"
Acc: 34.84848484848485

MODELO_RNN = "rnn-16clases-750x4-200u-20emb"
Acc: 37.878787878787875



-----------------------------------------------------------------------------------------------------
model.add(Embedding(input_dim=max_words, output_dim=UNIDADES_LSTM, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(Dropout(0.1))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.1)) #, input_shape=formato_entrada))
model.add(Dense(num_classes))
model.add(Activation('softmax'))
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['categorical_accuracy'])



MODELO_RNN = "rnn/rnn-16clases-500x4-100ue"
Acc: 52.02020202020202
PROBAR MÁS ÉPOCAS




------------------------------------------------------------------------------------------------------------
model.add(Embedding(input_dim=max_words, output_dim=UNIDADES_LSTM, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(SpatialDropout1D(0.3))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.3, recurrent_dropout=0.3))
model.add(Dense(UNIDADES_LSTM, activation='relu'))
model.add(Dropout(0.3))
model.add(Dense(num_classes, activation='softmax'))
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['categorical_accuracy'])


MODELO_RNN = "rnn/rnnv2-16clases-500x4-100ue"
Acc: 49.831649831649834

MODELO_RNN = "rnn/rnnv2-16clases-500x4-100ue-01do"
Acc: 47.81144781144781

--

Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
embedding_1 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
lstm_1 (LSTM)                (None, 64)                42752     
_________________________________________________________________
dense_1 (Dense)              (None, 17)                1105      
_________________________________________________________________
activation_1 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,689,721
Trainable params: 51,689,721
Non-trainable params: 0
_________________________________________________________________
Particion: 1/3
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

Train on 2266 samples, validate on 1134 samples
Epoch 1/40
2266/2266 [==============================] - 1290s 569ms/step - loss: 2.7481 - categorical_accuracy: 0.3861 - val_loss: 2.0062 - val_categorical_accuracy: 0.4577

Epoch 00001: val_categorical_accuracy improved from -inf to 0.45767, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 2/40
2266/2266 [==============================] - 1287s 568ms/step - loss: 2.6360 - categorical_accuracy: 0.4793 - val_loss: 1.9933 - val_categorical_accuracy: 0.4427

Epoch 00002: val_categorical_accuracy did not improve from 0.45767
Epoch 3/40
2266/2266 [==============================] - 1284s 567ms/step - loss: 2.5863 - categorical_accuracy: 0.4007 - val_loss: 1.9810 - val_categorical_accuracy: 0.3236

Epoch 00003: val_categorical_accuracy did not improve from 0.45767
Epoch 4/40
2266/2266 [==============================] - 1285s 567ms/step - loss: 2.4856 - categorical_accuracy: 0.4113 - val_loss: 1.9586 - val_categorical_accuracy: 0.4938

Epoch 00004: val_categorical_accuracy improved from 0.45767 to 0.49383, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 5/40
2266/2266 [==============================] - 1284s 566ms/step - loss: 2.3869 - categorical_accuracy: 0.5344 - val_loss: 1.9356 - val_categorical_accuracy: 0.4462

Epoch 00005: val_categorical_accuracy did not improve from 0.49383
Epoch 6/40
2266/2266 [==============================] - 1282s 566ms/step - loss: 2.2795 - categorical_accuracy: 0.5225 - val_loss: 1.8956 - val_categorical_accuracy: 0.4903

Epoch 00006: val_categorical_accuracy did not improve from 0.49383
Epoch 7/40
1312/2266 [================>.............] - ETA: 7:48 - loss: 2.1263 - categorical_accuracy: 0.5831

---

Model: "sequential_2"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
embedding_2 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
bidirectional_1 (Bidirection (None, 128)               64128     
_________________________________________________________________
dropout_1 (Dropout)          (None, 128)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 17)                2193      
_________________________________________________________________
activation_1 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,712,185
Trainable params: 51,712,185
Non-trainable params: 0
_________________________________________________________________
Particion: 1/3
Train on 2266 samples, validate on 1134 samples
Epoch 1/40
2266/2266 [==============================] - 2678s 1s/step - loss: 2.7436 - categorical_accuracy: 0.3261 - val_loss: 1.9884 - val_categorical_accuracy: 0.3598

Epoch 00001: val_categorical_accuracy improved from -inf to 0.35979, saving model to /content/drive/My Drive/FICH/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 2/40
1824/2266 [=======================>......] - ETA: 7:46 - loss: 2.5253 - categorical_accuracy: 0.4062

---

