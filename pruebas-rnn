model = Sequential()
model.add(Embedding(max_words, EMB_SIZE, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(Dropout(0.1))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.1)) #, input_shape=formato_entrada))
model.add(Dense(num_classes))
model.add(Activation('sigmoid'))
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['categorical_accuracy'])

UNIDADES_LSTM = 100

MODELO_RNN = "rnn-16clases-500x4"
~40

MODELO_RNN = "rnn-16clases-500x3"
Acc: 37.20538720538721


MODELO_RNN = "rnn-16clases-500x5"
Acc: 37.20538720538721


MODELO_RNN = "rnn-16clases-1000x4-100u"
Acc: 33.33333333333333
------------------------------------

UNIDADES_LSTM = 200

MODELO_RNN = "rnn-16clases-500x4-200u"
Acc: 35.35353535353536


MODELO_RNN = "rnn-16clases-1000x4-200u"
Acc: 38.88888888888889





------------------------------
top palabras 1000


MODELO_RNN = "rnn-16clases-500x4-100u_v2"
Acc: 49.158249158249156
PROBAR MÁS ÉPOCAS

MODELO_RNN = "rnn-16clases-750x4-100u"
Acc: 47.474747474747474

MODELO_RNN = "rnn-16clases-500x4-50u"
Acc: 34.84848484848485


MODELO_RNN = "rnn-16clases-500x4-100u-50emb"
Acc: 34.84848484848485

MODELO_RNN = "rnn-16clases-750x4-200u-20emb"
Acc: 37.878787878787875



-----------------------------------------------------------------------------------------------------
model.add(Embedding(input_dim=max_words, output_dim=UNIDADES_LSTM, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(Dropout(0.1))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.1)) #, input_shape=formato_entrada))
model.add(Dense(num_classes))
model.add(Activation('softmax'))
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['categorical_accuracy'])



MODELO_RNN = "rnn/rnn-16clases-500x4-100ue"
Acc: 52.02020202020202
PROBAR MÁS ÉPOCAS




------------------------------------------------------------------------------------------------------------
model.add(Embedding(input_dim=max_words, output_dim=UNIDADES_LSTM, input_length=MAXIMA_LONGITUD_EJEMPLOS))
model.add(SpatialDropout1D(0.3))
model.add(LSTM(units=UNIDADES_LSTM, dropout=0.3, recurrent_dropout=0.3))
model.add(Dense(UNIDADES_LSTM, activation='relu'))
model.add(Dropout(0.3))
model.add(Dense(num_classes, activation='softmax'))
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['categorical_accuracy'])


MODELO_RNN = "rnn/rnnv2-16clases-500x4-100ue"
Acc: 49.831649831649834

MODELO_RNN = "rnn/rnnv2-16clases-500x4-100ue-01do"
Acc: 47.81144781144781
















----------------------------------


Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
embedding_1 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
lstm_1 (LSTM)                (None, 64)                42752     
_________________________________________________________________
dense_1 (Dense)              (None, 17)                1105      
_________________________________________________________________
activation_1 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,689,721
Trainable params: 51,689,721
Non-trainable params: 0
_________________________________________________________________
Particion: 1/3
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

Train on 2266 samples, validate on 1134 samples
Epoch 1/40
2266/2266 [==============================] - 1290s 569ms/step - loss: 2.7481 - categorical_accuracy: 0.3861 - val_loss: 2.0062 - val_categorical_accuracy: 0.4577

Epoch 00001: val_categorical_accuracy improved from -inf to 0.45767, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 2/40
2266/2266 [==============================] - 1287s 568ms/step - loss: 2.6360 - categorical_accuracy: 0.4793 - val_loss: 1.9933 - val_categorical_accuracy: 0.4427

Epoch 00002: val_categorical_accuracy did not improve from 0.45767
Epoch 3/40
2266/2266 [==============================] - 1284s 567ms/step - loss: 2.5863 - categorical_accuracy: 0.4007 - val_loss: 1.9810 - val_categorical_accuracy: 0.3236

Epoch 00003: val_categorical_accuracy did not improve from 0.45767
Epoch 4/40
2266/2266 [==============================] - 1285s 567ms/step - loss: 2.4856 - categorical_accuracy: 0.4113 - val_loss: 1.9586 - val_categorical_accuracy: 0.4938

Epoch 00004: val_categorical_accuracy improved from 0.45767 to 0.49383, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 5/40
2266/2266 [==============================] - 1284s 566ms/step - loss: 2.3869 - categorical_accuracy: 0.5344 - val_loss: 1.9356 - val_categorical_accuracy: 0.4462

Epoch 00005: val_categorical_accuracy did not improve from 0.49383
Epoch 6/40
2266/2266 [==============================] - 1282s 566ms/step - loss: 2.2795 - categorical_accuracy: 0.5225 - val_loss: 1.8956 - val_categorical_accuracy: 0.4903

Epoch 00006: val_categorical_accuracy did not improve from 0.49383
Epoch 7/40
2266/2266 [==============================] - 1280s 565ms/step - loss: 2.1412 - categorical_accuracy: 0.5199 - val_loss: 1.9505 - val_categorical_accuracy: 0.3360

Epoch 00007: val_categorical_accuracy did not improve from 0.49383
Epoch 8/40
2266/2266 [==============================] - 1281s 565ms/step - loss: 1.9904 - categorical_accuracy: 0.4704 - val_loss: 1.8401 - val_categorical_accuracy: 0.3642

Epoch 00008: val_categorical_accuracy did not improve from 0.49383
Epoch 9/40
2266/2266 [==============================] - 1283s 566ms/step - loss: 1.9454 - categorical_accuracy: 0.5600 - val_loss: 1.8811 - val_categorical_accuracy: 0.3571

Epoch 00009: val_categorical_accuracy did not improve from 0.49383
Epoch 10/40
2266/2266 [==============================] - 1282s 566ms/step - loss: 1.8262 - categorical_accuracy: 0.5137 - val_loss: 1.8148 - val_categorical_accuracy: 0.3792

Epoch 00010: val_categorical_accuracy did not improve from 0.49383
Epoch 11/40
2266/2266 [==============================] - 1285s 567ms/step - loss: 1.7586 - categorical_accuracy: 0.5578 - val_loss: 1.9178 - val_categorical_accuracy: 0.3633

Epoch 00011: val_categorical_accuracy did not improve from 0.49383
Epoch 12/40
2266/2266 [==============================] - 1283s 566ms/step - loss: 1.7047 - categorical_accuracy: 0.5238 - val_loss: 1.9429 - val_categorical_accuracy: 0.3660

Epoch 00012: val_categorical_accuracy did not improve from 0.49383
Epoch 13/40
2266/2266 [==============================] - 1281s 565ms/step - loss: 1.6945 - categorical_accuracy: 0.5212 - val_loss: 1.9084 - val_categorical_accuracy: 0.3616

Epoch 00013: val_categorical_accuracy did not improve from 0.49383
Epoch 14/40
2266/2266 [==============================] - 1273s 562ms/step - loss: 1.6660 - categorical_accuracy: 0.5459 - val_loss: 2.1438 - val_categorical_accuracy: 0.3404

Epoch 00014: val_categorical_accuracy did not improve from 0.49383
Epoch 15/40
2266/2266 [==============================] - 1279s 565ms/step - loss: 1.6651 - categorical_accuracy: 0.5238 - val_loss: 1.8768 - val_categorical_accuracy: 0.3651

Epoch 00015: val_categorical_accuracy did not improve from 0.49383
Epoch 16/40
2266/2266 [==============================] - 1284s 566ms/step - loss: 1.6530 - categorical_accuracy: 0.5194 - val_loss: 1.9212 - val_categorical_accuracy: 0.3642

Epoch 00016: val_categorical_accuracy did not improve from 0.49383
Epoch 17/40
2266/2266 [==============================] - 1287s 568ms/step - loss: 1.6329 - categorical_accuracy: 0.5463 - val_loss: 1.8970 - val_categorical_accuracy: 0.3889

Epoch 00017: val_categorical_accuracy did not improve from 0.49383
Epoch 18/40
2266/2266 [==============================] - 1293s 571ms/step - loss: 1.6290 - categorical_accuracy: 0.5459 - val_loss: 1.9348 - val_categorical_accuracy: 0.3686

Epoch 00018: val_categorical_accuracy did not improve from 0.49383
Epoch 19/40
2266/2266 [==============================] - 1289s 569ms/step - loss: 1.6303 - categorical_accuracy: 0.5185 - val_loss: 1.9424 - val_categorical_accuracy: 0.3677

Epoch 00019: val_categorical_accuracy did not improve from 0.49383
Epoch 20/40
2266/2266 [==============================] - 1285s 567ms/step - loss: 1.6183 - categorical_accuracy: 0.5313 - val_loss: 1.8999 - val_categorical_accuracy: 0.5229

Epoch 00020: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.

Epoch 00020: val_categorical_accuracy improved from 0.49383 to 0.52293, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 21/40
2266/2266 [==============================] - 1294s 571ms/step - loss: 1.6183 - categorical_accuracy: 0.5936 - val_loss: 1.9054 - val_categorical_accuracy: 0.5265

Epoch 00021: val_categorical_accuracy improved from 0.52293 to 0.52646, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 22/40
2266/2266 [==============================] - 1293s 571ms/step - loss: 1.6197 - categorical_accuracy: 0.5693 - val_loss: 1.9143 - val_categorical_accuracy: 0.3730

Epoch 00022: val_categorical_accuracy did not improve from 0.52646
Epoch 23/40
2266/2266 [==============================] - 1291s 570ms/step - loss: 1.6045 - categorical_accuracy: 0.5569 - val_loss: 1.9208 - val_categorical_accuracy: 0.3730

Epoch 00023: val_categorical_accuracy did not improve from 0.52646
Epoch 24/40
2266/2266 [==============================] - 1283s 566ms/step - loss: 1.6104 - categorical_accuracy: 0.5600 - val_loss: 1.9232 - val_categorical_accuracy: 0.3695

Epoch 00024: val_categorical_accuracy did not improve from 0.52646
Epoch 25/40
2266/2266 [==============================] - 1289s 569ms/step - loss: 1.6089 - categorical_accuracy: 0.5591 - val_loss: 1.9316 - val_categorical_accuracy: 0.3677

Epoch 00025: val_categorical_accuracy did not improve from 0.52646
Epoch 26/40
2266/2266 [==============================] - 1286s 568ms/step - loss: 1.6036 - categorical_accuracy: 0.5499 - val_loss: 1.9341 - val_categorical_accuracy: 0.3677

Epoch 00026: val_categorical_accuracy did not improve from 0.52646
Epoch 27/40
2266/2266 [==============================] - 1286s 567ms/step - loss: 1.6137 - categorical_accuracy: 0.5499 - val_loss: 1.9336 - val_categorical_accuracy: 0.3686

Epoch 00027: val_categorical_accuracy did not improve from 0.52646
Epoch 28/40
2240/2266 [============================>.] - ETA: 12s - loss: 1.6068 - categorical_accuracy: 0.5411





















Layer (type)                 Output Shape              Param #   
=================================================================
embedding_1 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
lstm_1 (LSTM)                (None, 64)                42752     
_________________________________________________________________
dense_1 (Dense)              (None, 17)                1105      
_________________________________________________________________
activation_1 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,689,721
Trainable params: 51,689,721
Non-trainable params: 0
_________________________________________________________________
Particion: 1/3
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

Train on 2266 samples, validate on 1134 samples
Epoch 1/40
2266/2266 [==============================] - 1290s 569ms/step - loss: 2.7481 - categorical_accuracy: 0.3861 - val_loss: 2.0062 - val_categorical_accuracy: 0.4577

Epoch 00001: val_categorical_accuracy improved from -inf to 0.45767, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 2/40
2266/2266 [==============================] - 1287s 568ms/step - loss: 2.6360 - categorical_accuracy: 0.4793 - val_loss: 1.9933 - val_categorical_accuracy: 0.4427

Epoch 00002: val_categorical_accuracy did not improve from 0.45767
Epoch 3/40
2266/2266 [==============================] - 1284s 567ms/step - loss: 2.5863 - categorical_accuracy: 0.4007 - val_loss: 1.9810 - val_categorical_accuracy: 0.3236

Epoch 00003: val_categorical_accuracy did not improve from 0.45767
Epoch 4/40
2266/2266 [==============================] - 1285s 567ms/step - loss: 2.4856 - categorical_accuracy: 0.4113 - val_loss: 1.9586 - val_categorical_accuracy: 0.4938

Epoch 00004: val_categorical_accuracy improved from 0.45767 to 0.49383, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 5/40
2266/2266 [==============================] - 1284s 566ms/step - loss: 2.3869 - categorical_accuracy: 0.5344 - val_loss: 1.9356 - val_categorical_accuracy: 0.4462

Epoch 00005: val_categorical_accuracy did not improve from 0.49383
Epoch 6/40
2266/2266 [==============================] - 1282s 566ms/step - loss: 2.2795 - categorical_accuracy: 0.5225 - val_loss: 1.8956 - val_categorical_accuracy: 0.4903

Epoch 00006: val_categorical_accuracy did not improve from 0.49383
Epoch 7/40
1312/2266 [================>.............] - ETA: 7:48 - loss: 2.1263 - categorical_accuracy: 0.5831



----------------------


Model: "sequential_3"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
embedding_3 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
bidirectional_2 (Bidirection (None, 128)               85504     
_________________________________________________________________
dense_1 (Dense)              (None, 17)                2193      
_________________________________________________________________
activation_1 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,733,561
Trainable params: 51,733,561
Non-trainable params: 0
_________________________________________________________________
Particion: 1/3
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

Train on 2266 samples, validate on 1134 samples
Epoch 1/40
2266/2266 [==============================] - 2992s 1s/step - loss: 2.7429 - categorical_accuracy: 0.3901 - val_loss: 1.9692 - val_categorical_accuracy: 0.5414

Epoch 00001: val_categorical_accuracy improved from -inf to 0.54145, saving model to /content/drive/My Drive/Proyecto Final de Carrera (PFC)/Código/mejor_modelo_cnn_1.h5
Epoch 2/40
2266/2266 [==============================] - 2979s 1s/step - loss: 2.5808 - categorical_accuracy: 0.4360 - val_loss: 1.9318 - val_categorical_accuracy: 0.3519

Epoch 00002: val_categorical_accuracy did not improve from 0.54145
Epoch 3/40
2266/2266 [==============================] - 2981s 1s/step - loss: 2.2219 - categorical_accuracy: 0.5415 - val_loss: 1.7227 - val_categorical_accuracy: 0.4868

Epoch 00003: val_categorical_accuracy did not improve from 0.54145
Epoch 4/40
 256/2266 [==>...........................] - ETA: 39:49 - loss: 1.5002 - categorical_accuracy: 0.7031

 




















 Model: "sequential_5"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
embedding_5 (Embedding)      (None, 7500, 102)         51645864  
_________________________________________________________________
lstm_5 (LSTM)                (None, 64)                42752     
_________________________________________________________________
dense_5 (Dense)              (None, 17)                1105      
_________________________________________________________________
activation_5 (Activation)    (None, 17)                0         
=================================================================
Total params: 51,689,721
Trainable params: 51,689,721
Non-trainable params: 0
_________________________________________________________________
Particion: 1/1
2720/2720 [==============================] - 421s 155ms/step
680/680 [==============================] - 110s 161ms/step
Acierto en el entrenamiento: 34.41%
Acierto en la validación: 36.62%
	Áreas bajo la curva ROC para las distintas clases en la partición 1:
		Media y desvío AUC ROC de la clase sin_interaccion: 0.9764685990338164

		Media y desvío AUC ROC de la clase inhibitor: 0.8074195498511905

		Media y desvío AUC ROC de la clase agonist: 0.7345533675799087

		Media y desvío AUC ROC de la clase antagonist: 0.7739568965517241

		Media y desvío AUC ROC de la clase cofactor: 0.7563053435114504

		Media y desvío AUC ROC de la clase binder: 0.636499524391901

		Media y desvío AUC ROC de la clase inducer: 0.7888979480907732

		Media y desvío AUC ROC de la clase antibody: 0.7366801103799618

		Media y desvío AUC ROC de la clase partial agonist: 0.875

		Media y desvío AUC ROC de la clase ligand: 0.8786312161496799

		Media y desvío AUC ROC de la clase product of: 0.8882962962962964

		Media y desvío AUC ROC de la clase multitarget: 0.6917774495322501

		Media y desvío AUC ROC de la clase potentiator: 0.6312161496799605

		Media y desvío AUC ROC de la clase modulator: 0.8392330383480825

		Media y desvío AUC ROC de la clase activator: 0.6091445427728613

		Media y desvío AUC ROC de la clase negative modulator: 0.6632592592592593

		Media y desvío AUC ROC de la clase other: 0.7654425811929526